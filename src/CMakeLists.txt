OPTION(SC_SYSTEM_OWN_MSEED "Use included libmseed" ON)

IF (NOT SC_SYSTEM_OWN_MSEED)
	SET(MSEED_REQUESTED_VERSION 2)
	FIND_PACKAGE(MSEED REQUIRED)
	SET(LIBMSEED_INCLUDE_DIR ${MSEED_INCLUDE_DIR})
	SET(LIBMSEED_LIBRARY ${MSEED_LIBRARY})
ELSE ()
	SET(LIBMSEED_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/system/libs/3rd-party/libmseed CACHE INTERNAL "")
	SET(LIBMSEED_LIBRARY mseed CACHE INTERNAL "")
	MARK_AS_ADVANCED(MSEED_INCLUDE_DIR MSEED_LIBRARY)
	SET(MSEED_FOUND "YES" CACHE INTERNAL "")
	MARK_AS_ADVANCED(MSEED_FOUND)
ENDIF ()

INCLUDE_DIRECTORIES(system/libs/3rd-party/fmt/include)

SET(SC_SYSTEM_LIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/system/libs)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/system/libs)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/system/libs)

SUBDIRS(system base)
IF(SC_ENABLE_CONTRIB)
	SUBDIRS(extras)
ENDIF()
